<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="ynu.edu.base.dao.FlowrateLogsMapper">
  <resultMap id="BaseResultMap" type="ynu.edu.base.pojo.FlowrateLogs">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="ope_id" jdbcType="INTEGER" property="opeId" />
    <result column="ope_name" jdbcType="VARCHAR" property="opeName" />
    <result column="ope_time" jdbcType="TIMESTAMP" property="opeTime" />
    <result column="detail" jdbcType="VARCHAR" property="detail" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, ip, ope_id, ope_name, ope_time, detail
  </sql>
  <select id="selectByExample" parameterType="ynu.edu.base.pojo.FlowrateLogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from flowrate_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="startRow != null and pageSize != null and pageSize != 0">
      limit #{startRow,jdbcType=INTEGER}, #{pageSize,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from flowrate_logs
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from flowrate_logs
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="ynu.edu.base.pojo.FlowrateLogsExample">
    delete from flowrate_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="ynu.edu.base.pojo.FlowrateLogs">
    insert into flowrate_logs (id, ip, ope_id, 
      ope_name, ope_time, detail
      )
    values (#{id,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, #{opeId,jdbcType=INTEGER}, 
      #{opeName,jdbcType=VARCHAR}, #{opeTime,jdbcType=TIMESTAMP}, #{detail,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="ynu.edu.base.pojo.FlowrateLogs">
    insert into flowrate_logs
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="opeId != null">
        ope_id,
      </if>
      <if test="opeName != null">
        ope_name,
      </if>
      <if test="opeTime != null">
        ope_time,
      </if>
      <if test="detail != null">
        detail,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="opeId != null">
        #{opeId,jdbcType=INTEGER},
      </if>
      <if test="opeName != null">
        #{opeName,jdbcType=VARCHAR},
      </if>
      <if test="opeTime != null">
        #{opeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        #{detail,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="ynu.edu.base.pojo.FlowrateLogsExample" resultType="java.lang.Long">
    select count(*) from flowrate_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update flowrate_logs
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.opeId != null">
        ope_id = #{record.opeId,jdbcType=INTEGER},
      </if>
      <if test="record.opeName != null">
        ope_name = #{record.opeName,jdbcType=VARCHAR},
      </if>
      <if test="record.opeTime != null">
        ope_time = #{record.opeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.detail != null">
        detail = #{record.detail,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update flowrate_logs
    set id = #{record.id,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      ope_id = #{record.opeId,jdbcType=INTEGER},
      ope_name = #{record.opeName,jdbcType=VARCHAR},
      ope_time = #{record.opeTime,jdbcType=TIMESTAMP},
      detail = #{record.detail,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="ynu.edu.base.pojo.FlowrateLogs">
    update flowrate_logs
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="opeId != null">
        ope_id = #{opeId,jdbcType=INTEGER},
      </if>
      <if test="opeName != null">
        ope_name = #{opeName,jdbcType=VARCHAR},
      </if>
      <if test="opeTime != null">
        ope_time = #{opeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="detail != null">
        detail = #{detail,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="ynu.edu.base.pojo.FlowrateLogs">
    update flowrate_logs
    set ip = #{ip,jdbcType=VARCHAR},
      ope_id = #{opeId,jdbcType=INTEGER},
      ope_name = #{opeName,jdbcType=VARCHAR},
      ope_time = #{opeTime,jdbcType=TIMESTAMP},
      detail = #{detail,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>